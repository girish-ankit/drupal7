<?php

// $Id$

function custom_block_frm_menu() {
    $items = array();
    $items['download/config'] = array(
        'title' => t('Downalod Configuration'),
        'page callback' => 'downlaod_conf_data',
        'access arguments' => array('administer site configuration'),
    );

    $items['download/report'] = array(
        'title' => t('Downalod report'),
        'page callback' => 'downlaod_report_page',
        'access arguments' => array('administer site configuration'),
    );
    return $items;
}

function downlaod_report_page() {
    $output = '';
    $header = array('Did', 'Name', 'Email', 'Date');

    $query = db_select('custom_download', 'cd')
            ->extend('PagerDefault')
            ->fields('cd', array('did', 'name', 'email', 'time'))
            ->orderBy('time', 'DESC')
            ->limit(2);

    $result = $query->execute();


    $data = array();
    $i = 1;

    foreach ($result as $rows) {

        $data[] = array($i, $rows->name, $rows->email, date("d/m/Y : H i s", $rows->time));
        $i++;
    }
    $output .= theme('table', array('header' => $header, 'rows' => $data, 'caption' => '', 'sticky' => TRUE, 'empty' => 'No nodes created...', 'id' => 'my-custom-id', 'class' => 'my-custom-class', 'border' => 3));

    $output .= theme('pager');
    return $output;
}

function downlaod_conf_data() {
    $output = '';
    $output .= drupal_render(drupal_get_form('downlaod_conf_from'));
    return $output;
}

function downlaod_conf_from() {

    $form = array();

    $form['form_heading'] = array(
        '#type' => 'textfield',
        '#title' => 'Form Heading',
        '#description' => t('Enter form heading'),
        '#default_value' => variable_get('form_heading', ''),
        '#required' => TRUE,
    );

    $form['download_heading'] = array(
        '#type' => 'textfield',
        '#title' => 'Form Heading',
        '#description' => t('Enter form heading'),
        '#default_value' => variable_get('download_heading', ''),
        '#required' => TRUE,
    );

    $form['download_url'] = array(
        '#type' => 'textfield',
        '#title' => 'Download URL',
        '#description' => t('Enter full url of document'),
        '#default_value' => variable_get('download_url', ''),
        '#required' => TRUE,
    );



    return system_settings_form($form);
    return $form;
}

/**
 * Implements hook_block_info().
 */
function custom_block_frm_block_info() {
    $blocks = array();
    $blocks['user_data'] = array(
        'info' => t('User Data'),
    );

    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function custom_block_frm_block_view($delta = '') {
    $block = array();

    switch ($delta) {
        case 'user_data' :
            $block['content'] = user_data_view();
            break;
    }

    return $block;
}

function user_data_view() {
    $output = '';
    $output .= drupal_render(drupal_get_form('user_data_form'));
    return $output;
}

function user_data_form($form, &$form_state) {
    if (!isset($form_state['stage']))
        $form_state['stage'] = 'first';
    $form = array();
    // drupal_set_message($form_state['stage']);

    switch ($form_state['stage']) {
        case 'first':
            return first_form($form, $form_state);
            break;
        case 'download':
            return download_form($form, $form_state);
            break;
        default:
            return first_form($form, $form_state);
            break;
    }

    return $form;
}

function user_data_form_validate($form, &$form_state) {
    switch ($form_state['stage']) {
        case 'first':
            return first_validate($form, $form_state);
            break;
    }
}

function user_data_form_submit($form, &$form_state) {
    switch ($form_state['stage']) {
        case 'first':
            first_submit($form, $form_state);
            $form_state['new_stage'] = 'download';
            break;
    }

    $form_state['stage'] = $form_state['new_stage'];
    $form_state['rebuild'] = TRUE;
}

function first_form($form, &$form_state) {

    $form['desc'] = array('#markup' => '<h3>' . variable_get('form_heading', '') . '</h3>');
    $form['name'] = array(
        '#type' => 'textfield',
        '#title' => 'Name',
        '#description' => t('Enter your name'),
        '#required' => TRUE,
        '#size' => 30,
        '#maxlength' => 120,
    );

    $form['email'] = array(
        '#type' => 'textfield',
        '#title' => 'Email',
        '#description' => t('Enter your email address'),
        '#required' => TRUE,
        '#size' => 30,
        '#maxlength' => 120,
    );


    $form['next'] = array(
        '#type' => 'submit',
        '#value' => t('Submit')
    );

    return $form;
}

function first_validate($form, &$form_state) {


    if (!valid_email_address($form_state['values']['email'])) {
        form_set_error('email', 'Invalid Email');
    }
}

function first_submit($form, &$form_state) {
    // drupal_set_message('submit first');

    $name = $form_state['values']['name'];
    $email = $form_state['values']['email'];
    //  drupal_set_message($name."----".$email);

    $did = db_insert('custom_download') // Table name no longer needs {}
            ->fields(array(
                'name' => $name,
                'email' => $email,
                'time' => REQUEST_TIME,
            ))
            ->execute();

    $form_state['stage'] = 'download';
}

function download_form($form, &$form_state) {

    $form['desc'] = array('#markup' => '<h3>' . variable_get('download_heading', '') . '</h3>');
    $download_path = variable_get('download_url', '');
    $download_link = "<p class='dn-link'>" . l('Download', $download_path) . "</p>";
    $form['download_link'] = array('#markup' => '<h3>' . $download_link . '</h3>');

    return $form;
}

