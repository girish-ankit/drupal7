<?php

// $Id$
function custom_function_permission(){
     return array(
    'view developer job' => array(
      'title' => t('View Developer Job'),
      'description' => t('This is permission build to access job section.'),
    ),
    'view developer job applicant' => array(
      'title' => t('View Developer Job Applicant'),
      'description' => t('This is permission to view applicant job.'),
    ),
   'custom contact document upload' => array(
      'title' => t('Custom Contact Document Upload'),
      'description' => t('This is permission to upload document.'),
    ),
  );

}
function custom_function_menu(){
    $item = array();
    $item['developer-job'] = array(
	'title' => t('Developer Job'),
	'page callback' => 'custom_developer_job',
	'access arguments' => array('view developer job'),
	'type' => MENU_CALLBACK
    );

    $item['node/%node/applicant'] = array(
    'title' => 'Applicant List',
    'page callback' => 'custom_job_applicant_list',
    'page arguments' => array(1,2),
    'access callback' => 'custom_job_applicant_list_access',
    'access arguments' => array(1),
    'file' => 'custom_applicant_list.inc',
    'weight' => 6,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

     $item['add-document/%ctools_js/%'] = array(
      'title' => 'Add Document',
      'page arguments' => array(1,2),
      'page callback' => 'custom_contact_add_document',
      'access arguments' => array('custom contact document upload'),
      'type' => MENU_NORMAL_ITEM,
     );
    $item['upload-image/%ctools_js/%'] = array(
      'title' => 'Add Image',
      'page arguments' => array(1,2),
      'page callback' => 'custom_contact_add_image',
      'access arguments' => array('custom contact document upload'),
      'type' => MENU_NORMAL_ITEM,
     );



    return $item;

}

function custom_contact_add_document($js = NULL, $id){
    if ($js) {
     // Required includes for ctools to work:
     ctools_include('modal');
     ctools_include('ajax');
     $form_state = array(
       'ajax' => TRUE,
       'title' => t(''),
     );
     $form_state['build_info']['args'] = array($id);
     $output = ctools_modal_form_wrapper('contact_upload_document', $form_state);
     print ajax_render($output);
     exit();
   } else {
     return drupal_get_form('contact_upload_document', $id);
   }

}

function custom_contact_add_image($js = NULL, $id){
    //echo $js.' -- '. $id; die();
    if ($js) {
     // Required includes for ctools to work:
     ctools_include('modal');
     ctools_include('ajax');
     $form_state = array(
       'ajax' => TRUE,
       'title' => t(''),
     );

     $form_state['build_info']['args'] = array($id);
     $output = ctools_modal_form_wrapper('contact_image_document', $form_state);
     print ajax_render($output);
     exit();
   } else {
      return drupal_get_form('contact_image_document', $id);
   }

}

function contact_upload_document($form, &$form_state, $id){
    $form = array();
        $data = explode('-', $id);
	$sid = $data[0];
	$nid = $data[1];
	$type = 'document';

     $document_fid = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type))->fetchField();

    if ($document_fid) {
        $upload_document_default = $document_fid;
	 $save_button = 'Update';
    } else {
        $upload_document_default = '';
	 $save_button = 'Save';
    }


    $form['#attributes']['enctype'] = "multipart/form-data";
    $form['id'] = array('#type' => 'hidden', '#value' => $id);
   $form['upload_document_'.$id] = array(
        '#type' => 'managed_file',
        '#name' => 'upload_document_'.$id,
        '#title' => t('Allowed file extension txt, doc, docs, pdf, xls.'),
        '#size' => 40,
       /// '#description' => t("Allowed file extension txt, doc, docs, pdf, xlsx."),
        //'#required' => TRUE,
        '#default_value' => $upload_document_default,
        '#theme' => 'contact_upload_document',
        '#upload_validators' => array(
            'file_validate_extensions' => array('txt doc docs pdf xls'),
            //  'file_validate_size' => array(0.3 * 1024 * 1024),
           // 'file_validate_image_resolution' => array('500x500'),
        ),
        '#upload_location' => 'public://'
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t($save_button),
  );

  return $form;

}

function contact_upload_document_validate($form, &$form_state){

}
function contact_upload_document_submit($form, &$form_state){

     global $user;
    $id = $form_state['values']['id'];
    $data = explode('-', $id);
    $sid = $data[0];
    $nid = $data[1];
    $fid = $form_state['values']['upload_document_'.$id];
    $type = 'document';
   // drupal_set_message($sid.'--'.$nid.'--'.$fid.'--'.$type );

     $fid_old = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type))->fetchField();

     $i=0;

    if (!$fid && $fid_old) {
	  $file = file_load($fid_old);
          file_delete($file);
        $fid_old = db_query("DELETE FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type));
  file_unmanaged_delete($file->uri);

	$i=1;

      }elseif  (!$fid_old && $fid) {
        // first time upload

        if ($fid) {
            $file = file_load($fid);
            $file->status = FILE_STATUS_PERMANENT;
        }

        file_save($file);
        file_usage_add($file, 'custom_function', $user->name, $fid, 1);
       // insert query
	         db_query("INSERT INTO {custom_contact_document} (nid, sid, fid, type, created, changed) VALUES (:nid, :sid, :fid, :type, :created, :changed)", array(':nid' => $nid, ':sid' => $sid, ':fid' => $fid, ':type' => $type, ':created' => time(), ':changed' => time()));
      $i=2;

    } else if ($fid == $fid_old) {
	 $i=3;
        // click submit without changing logo
    } else if ($fid != $fid_old) {
        // click submit when new logo is uplodeed


        if ($fid) {
            $file = file_load($fid);
            $file->status = FILE_STATUS_PERMANENT;
        }

        file_save($file);
        file_usage_add($file, 'jawzone_core', $user->name, $fid, 1);


        // update database table jawzone_channel

        db_query("UPDATE {custom_contact_document} SET fid=:fid, changed=:changed WHERE nid = :nid AND sid = :sid AND type=:type", array('fid'=>$fid, ':nid' => $nid, ':changed'=> time(),':sid' => $sid, ':type'=>$type));
	 $i=4;
    }

    if($i){
    module_load_include('inc', 'ctools', 'includes/modal');
    module_load_include('inc', 'ctools', 'includes/ajax');
    $path = 'node/10/webform-results';

        $commands[] = ctools_modal_command_dismiss();
	$commands[] = ctools_ajax_command_redirect($path);
	if($i==1){
	    drupal_set_message('Document has been deleted');

	}elseif($i==2){
	    drupal_set_message('Document has been added');

	}elseif($i==4){
	    drupal_set_message('Document has been replaced');

	}

         print ajax_render($commands);
    exit;

    }

}

function contact_image_document($form, &$form_state, $id){
    $form = array();
    $form['id'] = array('#type' => 'hidden', '#value' => $id);
    $data = explode('-', $id);
    $sid = $data[0];
    $nid = $data[1];
    $type = 'image';
     $upload_image_fid = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type))->fetchField();
    if ($upload_image_fid) {
        $upload_image_defaul = $upload_image_fid;
	$save_button = 'Update';
    } else {
       $upload_image_defaul = '';
       $save_button = 'Save';
    }
    $upload_document_default = '';
    $form['#attributes']['enctype'] = "multipart/form-data";
    $form['upload_image_'.$id] = array(
        '#type' => 'managed_file',
        '#name' => 'upload_image_'.$id,
        '#title' => t('Allowed file extension gif, png, jpg, jpeg.'),
        '#size' => 40,
      // '#description' => t("Allowed file extension gif, png, jpg, jpeg."),
        //'#required' => TRUE,
        '#default_value' => $upload_image_defaul,
        '#theme' => 'contact_upload_image',
        '#upload_validators' => array(
            'file_validate_extensions' => array('gif png jpg jpeg'),
            // 'file_validate_size' => array(0.3 * 1024 * 1024),
           // 'file_validate_image_resolution' => array('500x500'),
        ),
        '#upload_location' => 'public://'
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t($save_button),
  );

  return $form;
}

function contact_image_document_validate($form, &$form_state){

}
function contact_image_document_submit($form, &$form_state){
    global $user;
    $id = $form_state['values']['id'];
    $data = explode('-', $id);
    $sid = $data[0];
    $nid = $data[1];
    $fid = $form_state['values']['upload_image_'.$id];
    $type = 'image';
   // drupal_set_message($sid.'--'.$nid.'--'.$fid.'--'.$type );

     $fid_old = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type))->fetchField();

     $i=0;


      if (!$fid && $fid_old) {
	  $file = file_load($fid_old);
	 // print_r($file); die();
          file_delete($file);
        $fid_old = db_query("DELETE FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type));
	file_unmanaged_delete($file->uri);
	$i=1;

      }elseif (!$fid_old && $fid) {
        // first time upload

        if ($fid) {
            $file = file_load($fid);
            $file->status = FILE_STATUS_PERMANENT;
        }

        file_save($file);
        file_usage_add($file, 'custom_function', $user->name, $fid, 1);
       // insert query
	         db_query("INSERT INTO {custom_contact_document} (nid, sid, fid, type, created, changed) VALUES (:nid, :sid, :fid, :type, :created, :changed)", array(':nid' => $nid, ':sid' => $sid, ':fid' => $fid, ':type' => $type, ':created' => time(), ':changed' => time()));
		 $i=2;

    } else if ($fid == $fid_old) {
	$i=3;
        // click submit without changing logo
    } else if ($fid != $fid_old) {
        // click submit when new logo is uplodeed


        if ($fid) {
            $file = file_load($fid);
            $file->status = FILE_STATUS_PERMANENT;
        }

        file_save($file);
        file_usage_add($file, 'jawzone_core', $user->name, $fid, 1);


        // update database table jawzone_channel

        db_query("UPDATE {custom_contact_document} SET fid=:fid, changed=:changed WHERE nid = :nid AND sid = :sid AND type=:type", array('fid'=>$fid, ':nid' => $nid, ':changed'=> time(),':sid' => $sid, ':type'=>$type));
	$i=4;
    }

    if($i){
    module_load_include('inc', 'ctools', 'includes/modal');
    module_load_include('inc', 'ctools', 'includes/ajax');
    $path = 'node/10/webform-results';

        $commands[] = ctools_modal_command_dismiss();
	$commands[] = ctools_ajax_command_redirect($path);
	if($i==1){
	    drupal_set_message('Image has been deleted');

	}elseif($i==2){
	    drupal_set_message('Image has been added');

	}elseif($i==4){
	    drupal_set_message('Image has been replaced');

	}

         print ajax_render($commands);
    exit;

    }


}

function theme_contact_upload_document($variables) {

    $element = $variables['element'];

    if (isset($element['#file']->uri)) {
	$file_size = format_size(filesize($element['#file']->uri));
        $output = '<div id="edit-logo-ajax-wrapper"><div class="form-item form-type-managed-file form-item-logo"><span class="file">';
	$doc_url = file_create_url($element['#file']->uri);
	$info = pathinfo($doc_url);

	$img_doc = array('xlsx'=> '1.png', 'xls'=> '1.png', 'pdf'=>'2.png', 'txt'=>'3.png', 'doc'=>'4.png', 'docs'=>'4.png');
	$doc_img_path = base_path().drupal_get_path('module', 'custom_function').'/images/'.$img_doc[$info['extension']];

        $output .=  '<img  src="'.$doc_img_path.'"/>'.l(basename($doc_url), $doc_url). ' ('.$file_size.') ';
        $output .= '</span><input type="submit" id="edit-' . $element['#name'] . '-remove-button" name="' . $element['#name'] . '_remove_button" value="Remove" class="form-submit ajax-processed">';
        $output .= '<input type="hidden" name="' . $element['#name'] . '[fid]" value="' . $element['#file']->fid . '"></div></div>';
        return $output;
    }
}

function theme_contact_upload_image($variables) {

    $element = $variables['element'];

    if (isset($element['#file']->uri)) {
	$file_size = format_size(filesize($element['#file']->uri));
	$doc_url = file_create_url($element['#file']->uri);


        $output = '<div id="edit-logo-ajax-wrapper"><div class="form-item form-type-managed-file form-item-logo"><span class="file">';
        $output .= '<img  src="' . image_style_url('thumbnail', $element['#file']->uri) . '" />  '.l(basename($doc_url), $doc_url).' ( '.$file_size.' )';
        $output .= '</span><input type="submit" id="edit-' . $element['#name'] . '-remove-button" name="' . $element['#name'] . '_remove_button" value="Remove" class="form-submit ajax-processed"> ' ;
        $output .= '<input type="hidden" name="' . $element['#name'] . '[fid]" value="' . $element['#file']->fid . '"></div></div>';
        return $output;
    }
}

function custom_function_theme($existing, $type, $theme, $path) {
    $items = array();
     $items['contact_upload_image'] = array(
        'render element' => 'element',
    );
      $items['contact_upload_document'] = array(
        'render element' => 'element',
    );
return $items;
}

function custom_job_applicant_list_access($node, $account = NULL) {


    global $user;
    $account = isset($account) ? $account : $user;

    $nid = $node->nid;
    $type = $node->type;
    $uid = $node->uid;

    if('developer_job' == $type){
	if(user_access('view developer job applicant', $account)){
	   return True;
	}else{
	    return False;
	}

    }else{
	return False;
    }


}

function custom_developer_job(){
     $output = '';

     $items = array();

$query =  db_select('node', 'n')->extend('PagerDefault');
         $query->join('field_data_field_publish_date', 'fpd', 'n.nid = fpd.entity_id');
	 $query->join('field_data_field_status', 'fs', 'n.nid = fs.entity_id');
         $query->condition('type', 'developer_job');
	 $query->condition('field_status_value', 'open', '=');
	 $query->condition('status', 1,'=')
            ->fields('n', array('nid'))
	    ->fields('fpd', array('field_publish_date_value'))
	    ->orderBy('fpd.field_publish_date_value', 'DESC')
            ->limit(9);

    $result = $query->execute();

    $output .='<div class="row">';
    foreach ($result as $rows) {
	$nd = node_load($rows->nid);
	//print_r($nd); die();
        $path = 'node/' . $nd->nid;
	$title = ucwords($nd->title);
	$body = substr(strip_tags($nd->body['und']['0']['value']),0,220);
	$publish_date = $nd->field_publish_date['und']['0']['value'];
        $industry = ucwords($nd->field_industry['und']['0']['value']);
	$difficulty = ucwords($nd->field_difficulty['und']['0']['value']);
	$status = ucwords($nd->field_status['und']['0']['value']);
	$business_type = ucwords($nd->field_business_type['und']['0']['value']);

	$output .='<div class="col-md-4 col-sm-6">';
	$output .='<div class="job-listing-wrapper">';

	$output .='<div class="job-listing-header"><h2>';
	$output .= l($title, $path);
	$output .='</h2></div>';
	$output .= '<div class="job-publish">Published On: '. date("d M Y", $nd->field_publish_date['und']['0']['value']).'</div>';

	$output .='<div class="job-info">';
	$output .='<span class="label label-default"><b>Industry:</b> '.$industry.'</span> ';
	$output .='<span class="label label-primary"><b>Difficulty:</b> '.$difficulty.'</span> ';
	$output .='<span class="label label-success"><b>status:</b> '.$status.'</span> ';
	$output .='<span class="label label-info"><b>Business Type:</b> '.$business_type.'</span> ';
	$output .='</div>';


	$output .='<div class="product-listing-body">';
	$output .= $body;
	$output .=' ...</div>';


	$output .='<div class="product-listing-readmore">';
	$output .= l(t('More info'), $path, array('attributes' => array('class' => array('more'))));
	$output .='</div>';

	$output .='</div>';
	$output .='</div>';
	}
	$output .='</div>';

   $output .= theme('pager');

    return $output;
}

function custom_function_menu_alter(&$items) {
    unset($items['admin/help']);
    unset($items['node/*/webform-results/analysis']);
     $items['user/register']['type'] = MENU_CALLBACK;
     $items['user/login']['type'] = MENU_CALLBACK;
     $items['user/password']['type'] = MENU_CALLBACK;
     $items['admin/content/webform']['title'] = 'Contact Form Result';
     unset($items['node/%webform_menu/webform-results/table']);
     unset($items['node/%webform_menu/webform-results/submissions']);
     unset($items['node/%webform_menu/webform-results/analysis']);
     unset($items['node/%webform_menu/webform-results/download']);
     unset($items['node/%webform_menu/webform-results/clear']);
     $items['node/%webform_menu/webform-results']['page callback'] = 'custom_webform_results_submissions';

}

function custom_webform_results_submissions($node, $user_filter,  $pager_count = 0){
   module_load_include('inc', 'custom_function', 'custom_applicant_list');

 $nid = $node->nid;

    $output = '';
    $output .= '<div id="custom-contact-search">';
    $output .= drupal_render(drupal_get_form('custom_contact_search'));
    $output .= '</div>';
    $output .= '<div class="table-responsive">';

     $header = array(
      array('data' => t('Name'), 'field' => 'name'),
      array('data' => t('Your Company'), 'field' => 'company'),
      array('data' => t('Address'), 'field' => 'address'),
      array('data' => t('E-mail'), 'field' => 'mail'),
      array('data' => t('Comments')),
      array('data' => t('Documents')),
      array('data' => t('Photos')),

  );

    $query = db_select('webform_submitted_data', 'wsd')
	    ->distinct()
	   // ->extend('PagerDefault')
	  //  ->extend('TableSort')
	    ->condition('nid', $nid, '=');
    if(isset($_GET['fid']) && isset($_GET['key'])){
	$key = trim($_GET['key']);
	$fid = trim($_GET['fid']);

	     $query->condition('data', '%' . db_like($key) . '%', 'LIKE');
	     $query->condition('cid', $fid, '=');
    }
	    $query->fields('wsd', array('sid', 'nid'));
	  //  ->limit(10);

    $result = $query->execute();

    $data = explode('-', $id);
	$sid = $data[0];
	$nid = $data[1];
	$type = 'document';

     $document_fid = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $nid, ':sid' => $sid, ':type'=>$type))->fetchField();



    $data = array();
    l(t('Link text'), 'about-us', array('attributes' => array('class' => array('ctools-use-modal','ctools-modal-modal-popup-small'))));

    foreach ($result as $rows) {
	$dd = get_serial_data($rows->sid, $rows->nid);
	$path = $rows->sid.'-'.$rows->nid;


	 $document_fid = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $rows->nid, ':sid' => $rows->sid, ':type'=>'document'))->fetchField();
	 $document_label = 'Add Document';
       $d_path = '';
	 if($document_fid){
	     $d_file = file_load($document_fid);
	    $d_path = '('.basename(file_create_url($d_file->uri)).') ';
	    $document_label = 'Edit';
	 }



      $image_lable = 'Add Photo';
	  $image_fid = db_query("SELECT fid FROM {custom_contact_document} WHERE nid = :nid AND sid = :sid AND type=:type", array(':nid' => $rows->nid, ':sid' => $rows->sid, ':type'=>'image'))->fetchField();
	   $i_path = '';
	  if($image_fid){
	    $i_file = file_load($image_fid);
	    $i_path = '('.basename(file_create_url($i_file->uri)).') ';
	    $image_lable = 'Edit';
	  }


	$data[] = array('name' => ucwords($dd['name']['value']), 'company'=> ucwords($dd['organization_name']['value']), 'address'=>ucwords($dd['address']['value']), 'mail'=> $dd['e_mail']['value'], $dd['comments']['value'], $d_path.l($document_label, 'add-document/nojs/'.$path, array('attributes' => array('class' => 'ctools-use-modal ctools-modal-modal-popup-small'))), $i_path.l($image_lable, 'upload-image/nojs/'. $path, array('attributes' => array('class' => 'ctools-use-modal ctools-modal-modal-popup-small'))));

    }
  $order = tablesort_get_order($header);
  $sort = tablesort_get_sort($header);

  // sort the table data accordingly
  $rows = tsort_nonsql_sort($data, $sort, $order['sql']);  // !!!! Tsort !!!!

  $table['header'] = $header;
  $table['attributes'] = array();
  $table['caption'] = '';
  $table['colgroups'] = array();
  $table['sticky'] = "";
  $table['empty'] = "No data found";
  $table['rows'] = $rows;

  $output .= theme_table($table);
    $output .= '</div>';

    return $output;

}

function custom_contact_search(){

    $form = array();
    $options = array();

    $result = db_query("SELECT DISTINCT wc.cid, wc.name FROM {webform_component} wc WHERE wc.nid=:nid ORDER BY wc.weight ASC", array(':nid' => 10));
    $field_default_value = 1;

 $radius_default_value = '';
    if (isset($_GET['fid'])) {
	$field_default_value = $_GET['fid'];
    }

     $key_word_default_value = '';
    if (isset($_GET['key'])) {
	$key_word_default_value = $_GET['key'];
    }

    foreach ($result as $row) {
	$options[$row->cid] = $row->name;

    }

      $form['field'] = array(
	'#type' => 'radios',
	'#title' => t('Search By'),
	'#default_value' => $field_default_value,
	'#options' => $options,
	'#required' => TRUE,
	'#prefix'=>'<div class="row"><div class="col-md-6">',
	'#suffix'=>'</div>'
	//'#description' => t('When a poll is closed, visitors can no longer vote for it.'),

  );

    $form['key_word'] = array(
    '#type' => 'textfield',
    '#title' => t('Key Word'),
    '#default_value' => $key_word_default_value,
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#prefix'=>'<div class="col-md-4">',
    '#suffix'=>'</div>'
  );

   $form['submit'] = array('#type' => 'submit', '#value' => t('Search'), '#prefix'=>'<div class="col-md-2">'
	);
   $form['reset'] = array('#type' => 'submit', '#value' => t('Cancel'),'#suffix'=>'</div></div>');
    return $form;
}

function custom_contact_search_submit($form, &$form_state){
    $path = current_path();
    $options = array();

     if ($form_state['values']['op'] == 'Cancel') {
	drupal_goto($path);
    }
     if ($form_state['values']['op'] == 'Search') {
	$fid = trim($form_state['values']['field']);
        $key = trim($form_state['values']['key_word']);

     if ($fid) {
	    $options['query']['fid'] = $fid;
	}
    if ($key) {
	    $options['query']['key'] = $key;
    }

    drupal_goto($path, $options);
    }





}



function custom_function_form_alter(&$form, $form_state, $form_id){

    switch ($form_id) {
      // This is our form ID.

      case 'user_pass':
	$form['actions']['submit']['#prefix'] = l(t('Cancel'), 'user/login', array('attributes' => array('class' => array('more cancel-button login'))));
	$form['name']['#description'] = '';
	$form['name']['#attributes']['placeholder'] = t('Enter Your Username or e-mail address');
	break;

    case 'user_register_form':

	$form['actions']['submit']['#prefix'] = '<a class="more cancel-button login" href="'.$root_url.'user/login">Cancel</a>';
	$form['actions']['submit']['#prefix'] = l(t('Cancel'), 'user/login', array('attributes' => array('class' => array('more cancel-button login'))));
	$form['account']['name']['#description'] = '';
	$form['account']['name']['#attributes']['placeholder'] = t('Spaces are allowed; punctuation is not allowed except for periods, hyphens, apostrophes, and underscores.');
	$form['account']['mail']['#description'] = '';
	$form['account']['mail']['#attributes']['placeholder'] = t('A valid e-mail address. All e-mails from the system will be sent to this address. The e-mail address is not made public and will only be used if you wish to receive a new password or wish to receive certain news or notifications by e-mail.
');

	break;

    case 'user_login':
	$form['actions']['submit']['#prefix'] = l(t('Cancel'), '<front>', array('attributes' => array('class' => array('more cancel-button login'))));
	$form['name']['#description'] = '';
	$form['name']['#attributes']['placeholder'] = t('Enter Your Name');
	$form['pass']['#description'] = '';
	$form['pass']['#attributes']['placeholder'] = t('Enter Your Password');
	break;

    case 'webform_client_form_10':
	$form['actions']['submit']['#prefix'] = l(t('Cancel'), '<front>', array('attributes' => array('class' => array('more cancel-button login'))));
	 $form['#validate'][] = 'custom_contact_validate';
	break;
     case 'webform_client_form_66':

	 $form['submitted']['e_mail']['#attributes'] = array('readonly' => 'readonly');
	 $form['#submit'][] = 'custom_job_form_data';

	break;

    case 'home_page_slider_node_form':
	$form['#validate'][] = 'custom_media_validation';
	break;



    }

}

function custom_contact_validate($form, &$form_state){

    $email = $form_state['values']['submitted']['e_mail'];
    $nbr_records = db_query("SELECT COUNT(nid) FROM {webform_submitted_data} WHERE nid = :nid AND cid=:cid AND data = :email", array(':nid' => 10, ':cid' => 2, ':email' => $email))->fetchField();
    if($nbr_records){
	 form_set_error('e_mail',t("This email address is already registed"));

    }


}

function custom_job_form_data($form, &$form_state){
   // print_r($form_state); die();
    $job_id = $form['submitted']['job_nid']['#value'];
    $path = url('node/'.$job_id, array('absolute' => TRUE));
    module_load_include('inc', 'ctools', 'includes/modal');
    module_load_include('inc', 'ctools', 'includes/ajax');
    if ( $form_state['submitted']){
        $commands[] = ctools_modal_command_dismiss();
	//$commands[] = ctools_ajax_command_redirect('<front>');
	$commands[] = ctools_ajax_command_redirect($path);
	drupal_set_message('Your application has been submitted');
         print ajax_render($commands);
    exit;
 }

}

function custom_media_validation($form, &$form_state) {
  // Random example, if the title is 'test' throw an error
   // print_r($form_state['values']);
   // form_set_error('field_media_type', $form_state['values']['field_media_type']);
  if ($form_state['values']['field_media_type']['und'][0]['value'] == 'Image') {

      if(!$form_state['values']['field_image']['und'][0]['fid']){
	 form_set_error('field_image', 'If you select Media Type <b>Image</b> then please <b>Slider Image</b> field is required');
      }

  }

  if ($form_state['values']['field_media_type']['und'][0]['value'] == 'Video') {
      if(!$form_state['values']['field_video']['und'][0]['video_url']){
	 form_set_error('field_video', 'If you select Media Type video then please <b>Video URL</b> field is required');
      }

  }


}

function custom_form_cancel(){
if ($_GET['destination']){
$backurl = $_GET['destination'];
}else{
$backurl ="front"; //replace with a URL if there is not a destination parameter.
}
drupal_goto($backurl);
}


/**
 * Implements hook_block_info().
 */
function custom_function_block_info() {
    $blocks = array();
    $blocks['home_page_recent_blog'] = array(
    		'info' => t('Recent blog'),
    );
     $blocks['home_page_slider'] = array(
    		'info' => t('Home Page Slider'),
    );
    $blocks['home_page_news'] = array(
    		'info' => t('Home Page news'),
    );
    $blocks['latest_news'] = array(
    		'info' => t('Latest News'),
    );
    $blocks['news_listing'] = array(
    		'info' => t('News Listing'),
    );
     $blocks['product_listing'] = array(
    		'info' => t('Product Listing'),
    );



    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function custom_function_block_view($delta = '') {
    $block = array();

    switch ($delta) {
    	   case 'home_page_recent_blog' :
    		$block['content'] = home_page_slider();
    		break;
	   case 'home_page_slider' :
    		$block['content'] = custom_home_page_slider();
    		break;
	    case 'home_page_news' :
    		$block['content'] = custom_home_page_news();
    		break;
	    case 'latest_news' :
    		$block['content'] = custom_latest_news();
    		break;
	    case 'news_listing' :
    		$block['content'] = custom_news_listing();
    		break;
	    case 'product_listing' :
    		$block['content'] = product_listing();
    		break;

    }



    return $block;
}

function custom_home_page_slider(){

    $result = db_query("SELECT n.nid FROM {node} n  JOIN {field_data_field_weight} fw ON n.nid = fw.entity_id WHERE n.type = :type AND status = :status ORDER BY fw.field_weight_value ASC", array(':type' => 'home_page_slider', ':status' => 1));

    $data = array();
    $i=0;
    foreach ($result as $row) {
	$nd = node_load($row->nid);
	  // print_r($nd); die();
	$title = ucwords($nd->title);
	$media_type = $nd->field_media_type['und']['0']['value'];
	if('Image' == $media_type){
	    $banner_image = $nd->field_image['und']['0']['uri'];
	    $banner_style_path = image_style_url('home_page_slider',$banner_image);
    	    $banner_image_path = file_create_url($banner_style_path);
	    $data[$i] = array('title'=> $title, 'type'=>'image', 'image_path'=>$banner_image_path);

	}
	if('Video' == $media_type){
	    $banner_video_url = $nd->field_video['und']['0']['video_url'];
	    $banner_video_thumb = $nd->field_video['und']['0']['thumbnail_path'];
	    $banner_video_data = $nd->field_video['und']['0']['video_data'];

	    $data[$i] = array('title'=> $title, 'type'=>'video', 'video_url'=>$banner_video_url, 'video_thumb'=>$banner_video_thumb,  'video_data' => $banner_video_data);


	}

	$i++;

    }

    $dataCnt = count($data);
    //print_r($data); die();


    $output ='';
    $output .='<div class="row">';
    $output .='<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="false">';
   // <!-- Indicators -->
    $output .='<ol class="carousel-indicators">';
    for($j=0; $j < $dataCnt; $j++){
	if($j==0){
	    $output .='<li data-target="#myCarousel" data-slide-to="'.$j.'" class="active"></li>';
	}else{
	  $output .='<li data-target="#myCarousel" data-slide-to="'.$j.'"></li>';
	}

    }
     $output .='</ol>';

   // <!-- Wrapper for slides -->
    $output .='<div class="carousel-inner">';
   for($j=0; $j < $dataCnt; $j++){
       if($j==0){
	   $output .='<div class="item active">';

       }else{
	   $output .='<div class="item">';

       }

       if($data[$j]['type'] == 'image'){
	 $output .='<img src="'.$data[$j]['image_path'].'" alt="'.$data[$j]['title'].'"  style="width:100%;" class="img-responsive">';
       }
       if($data[$j]['type'] == 'video'){
	   $id = _video_embed_field_get_youtube_id($data[$j]['video_url']);
	   $settings['wmode'] = 'opaque';
  $settings_str = urlencode(_video_embed_code_get_settings_str($settings));
	 $output .='<iframe width="100%"  align="center" src="//www.youtube.com/embed/' . $id . '?' . $settings_str . '" frameborder="0" allowfullscreen></iframe>';
       }


        $output .='</div>';

   }


    $output .='</div>';

   // <!-- Left and right controls -->
    $output .='<a class="left carousel-control" href="#myCarousel" data-slide="prev">';
    $output .='<span class="glyphicon glyphicon-chevron-left"></span>';
    $output .='<span class="sr-only">Previous</span>';
    $output .='</a>';
    $output .='<a class="right carousel-control" href="#myCarousel" data-slide="next">';
    $output .='<span class="glyphicon glyphicon-chevron-right"></span>';
    $output .='<span class="sr-only">Next</span>';
    $output .='</a>';
    $output .='</div>';
    $output .='</div>';

    return $output;
}

function custom_home_page_news(){
    $output = '';
	$output .= '<div class="hm-latest-news">';
	$output .= '<div class="container">';
	$output .= '<div class="site_heading">';
	$output .= '<h2> Latest News </h2>';
	$output .= '</div>';

	$output .= '<div class="swiper-container" id="latest-news">';
	$output .= '<div class="swiper-wrapper">';
	//<!--  looping -->

	$result = db_query("SELECT n.nid, n.title, fpd.field_publish_date_value FROM {node} n  JOIN {field_data_field_publish_date} fpd ON n.nid = fpd.entity_id WHERE n.type = :type AND status = :status ORDER BY fpd.field_publish_date_value DESC LIMIT 10", array(':type' => 'news', ':status' => 1));
	foreach ($result as $row) {
	    $nd = node_load($row->nid);

	$output .= '<div class="swiper-slide">';
	$output .= '<div class="home-news-items">';
	$output .= '<div class="home-news-header">';
	$output .= '<span class="home-news-title">';
	$output .=  l(ucwords($nd->title), 'node/'.$nd->nid);
	$output .= '</span>';
	$output .= '<span class="home-news-publish"> Published On: ';
	$output .= date("d M Y", $row->field_publish_date_value);
	$output .= '</span>';
	$output .= '</div>';
	$output .= '<div class="home-news-body">';
	$output .= substr(strip_tags($nd->body['und'][0]['value']),0,400);
	$output .= ' ...</div>';
	$output .= '</div>';
	$output .= '</div>';

	}

    //<!--  /looping -->
$output .= '</div>';
   //$output .= ' <div class="swiper-button-next"></div>';
   //$output .= '<div class="swiper-button-prev"></div>';
   $output .= '<div class="swiper-pagination"></div>';
   $output .= '</div>';
   $output .= '</div>';
   $output .= '</div>';
	return $output;

}

function custom_latest_news(){
    $output = '';
    $output .= '<h2>Latest news</h2>';
    $items = array();

   $result = db_query("SELECT nid FROM {node} n  JOIN {field_data_field_publish_date} fpd ON n.nid = fpd.entity_id WHERE n.type = :type AND status = :status ORDER BY fpd.field_publish_date_value DESC LIMIT 10", array(':type' => 'news', ':status' => 1));

	foreach ($result as $row) {
	    $nd = node_load($row->nid);
	    $items[] = l(ucwords($nd->title), 'node/'.$nd->nid);
	}

	$output .= theme('item_list', array('items' => $items));
	//print_r($items); die();

    return $output;

}

function custom_news_listing(){
    $output = '';

     $items = array();

$query =  db_select('node', 'n')->extend('PagerDefault');
         $query->join('field_data_field_publish_date', 'fpd', 'n.nid = fpd.entity_id');
         $query->condition('type', 'news')
            ->fields('n', array('nid'))
	    ->fields('fpd', array('field_publish_date_value'))
	    ->orderBy('fpd.field_publish_date_value', 'DESC')
            ->limit(5);

    $result = $query->execute();


    foreach ($result as $rows) {
	$nd = node_load($rows->nid);
	//print_r($nd); die();
        $path = 'node/' . $nd->nid;
	$title = ucwords($nd->title);
	$body = substr(strip_tags($nd->body['und']['0']['value']),0,400);
	$publish_date = $nd->field_publish_date['und']['0']['value'];

	$output .='<div class="news-listing-wrapper">';
	$output .='<div class="news-listing-header"><h2>';
	$output .= l($title, $path);
	$output .='</h2></div>';

	$output .='<div class="news-listing-publish">';
	$output .='<div class="post-submitted-info">';
	$output .= '<div class="submitted-date">';
        $output .= '<div class="month">'.date("M", $publish_date).'</div>';
        $output .= '<div class="day">'.date("d", $publish_date).'</div>';
        $output .= '<div class="year">'.date("Y", $publish_date).'</div>';
        $output .= '</div>';
	$output .='</div>';

	$output .='</div>';

	$output .='<div class="news-listing-body">';
	$output .= $body;
	$output .=' ...</div>';
	$output .='<div class="news-listing-readmore">';
	$output .= l(t('More info'), $path, array('attributes' => array('class' => array('more'))));
	$output .='</div>';
	$output .='</div>';
    }

   $output .= theme('pager');

    return $output;


}

function product_listing(){
    $output = '';

     $result = db_query("SELECT nid FROM {node} n WHERE n.type = :type AND status = :status ORDER BY created DESC LIMIT 10", array(':type' => 'product', ':status' => 1));
     $output .='<div class="row">';
	foreach ($result as $row) {
		$nd = node_load($row->nid);
	//print_r($nd); die();
        $path = 'node/' . $nd->nid;
	$title = ucwords($nd->title);
	$body = substr(strip_tags($nd->body['und']['0']['value']),0,200);
	$product_image = $nd->field_product_image['und']['0']['uri'];
	$product_style_path = image_style_url('product_image',$product_image);
    	$product_image_path = file_create_url($product_style_path);


	$output .='<div class="col-md-4 col-sm-6">';
	$output .='<div class="product-listing-wrapper">';
	$output .='<div class="product-listing-image">';
	$output .= '<img src="'.$product_image_path.'"  class="img-responsive"/>';
	$output .='</div>';

	$output .='<div class="product-listing-header"><h2>';
	$output .= l($title, $path);
	$output .='</h2></div>';


	$output .='<div class="product-listing-body">';
	$output .= $body;
	$output .=' ...</div>';
	$output .='<div class="product-listing-readmore">';
	$output .= l(t('More info'), $path, array('attributes' => array('class' => array('more'))));
	$output .='</div>';
	$output .='</div>';
	$output .='</div>';
	}
	$output .='</div>';
    return $output;

}



function  home_page_slider() {
	$output = '';
	$output .='<div class="row"><div id="highlighted-bottom">';
	$output .= '<div class="recent-blog-home" id="rbh">';
	$output .= '<div class="container"';
	$output .= '<div class="row">';
	$output .= '<div class="site_heading">';
	$output .= '<h2>Latest Blog</h2>';
	$output .= '</div>';
	$output .= '<div class="swiper-container" id="top_slider">';
	$output .= '<div class="swiper-wrapper">';
	$result = db_query("SELECT nid FROM {node} n WHERE n.type = :type AND status = :status ORDER BY created DESC LIMIT 10", array(':type' => 'blog', ':status' => 1));
	foreach ($result as $row) {
		$nd = node_load($row->nid);

	//<!--  looping -->

	$output .= '<div class="swiper-slide">';
	$output .= '<div class="service_box">';
	$output .= '<div class="circle_box">';
	$img_path_uri = $nd->field_image['und'][0]['uri'];
	$image_style_path = image_style_url('blog_home', $img_path_uri);
	$output .= ' <img src="'.$image_style_path.'" alt=""  class="img-responsive"/>';
	$output .= '</div>';
	$output .= '<h3>'.l($nd->title, 'node/'.$nd->nid).'</h3>';
	$output .= '</div>';
	$output .= '</div>';
	}
	// <!--  /looping -->
	$output .= ' </div>';
	$output .= '<div class="swiper-button-next"></div>';
	$output .= '<div class="swiper-button-prev"></div>';
	$output .= '</div>';
	$output .= ' </div>';
	$output .= '</div>';
	$output .= '</div>';
	$output .= '</div>';
	$output .= '</div>';

	return $output;
}

function custom_function_custom_theme() {


  if (current_path() == 'node/10/webform-results') {
         return 'startupgrowth_lite';
  }

  if (arg(0)== 'add-document' && arg(1) == 'ajax') {
        return 'seven';
  }
  if (arg(0)== 'upload-image' && arg(1) == 'ajax') {
        return 'seven';
  }
}
